{"ast":null,"code":"import _objectSpread from \"/Users/anhtong/Documents/2. Anh Tong/Job Related/In-TAC Classes/LighthouseLab/WebFlex Course/WK18/scheduler_final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/anhtong/Documents/2. Anh Tong/Job Related/In-TAC Classes/LighthouseLab/WebFlex Course/WK18/scheduler_final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nexport default function useApplicationData() {\n  const _useState = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const setDay = day => setState(_objectSpread({}, state, {\n    day\n  }));\n\n  useEffect(() => {\n    Promise.all([axios.get('/api/days'), axios.get('/api/appointments'), axios.get('/api/interviewers')]).then(all => {\n      setState(prev => _objectSpread({}, prev, {\n        days: all[0].data,\n        appointments: all[1].data,\n        interviewers: all[2].data\n      }));\n    });\n  }, []);\n\n  function bookInterview(id, interview) {\n    const appointment = _objectSpread({}, state.appointments[id], {\n      interview: _objectSpread({}, interview)\n    });\n\n    const appointments = _objectSpread({}, state.appointments, {\n      [id]: appointment\n    });\n\n    const freeSpotChanged = -1;\n    const saveToServer = axios.put(\"/api/appointments/\".concat(id), appointment).then(res => console.log(\"Received status code (adding): \".concat(res.status))).then(() => {\n      const days = updateSpots(id, freeSpotChanged);\n      setState(_objectSpread({}, state, {\n        appointments,\n        days\n      }));\n      return Promise.resolve('Saved!');\n    }).catch(res => {\n      console.log(res);\n      setState(_objectSpread({}, state));\n      return Promise.reject('Error Saving!');\n    });\n    return saveToServer;\n  }\n\n  function cancelInterview(id) {\n    const appointments = _objectSpread({}, state.appointments);\n\n    const freeSpotChanged = 1;\n    appointments[id].interview = null;\n    const deleteFromServer = axios.delete(\"/api/appointments/\".concat(id)).then(res => console.log(\"Received status code (removing): \".concat(res.status))).then(() => {\n      const days = updateSpots(id, freeSpotChanged);\n      setState(_objectSpread({}, state, {\n        appointments,\n        days\n      }));\n      return Promise.resolve('Deleted!');\n    }).catch(res => {\n      console.log(res);\n      return Promise.reject('Error Deleting!');\n    });\n    return deleteFromServer;\n  }\n\n  const updateSpots = (id, dif) => {\n    const newDays = [...state.days];\n    newDays.forEach(item => {\n      if (item.appointments.indexOf(id) > -1) {\n        item.spots += dif;\n      }\n    });\n    return newDays;\n  };\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  };\n}\n;","map":{"version":3,"sources":["/Users/anhtong/Documents/2. Anh Tong/Job Related/In-TAC Classes/LighthouseLab/WebFlex Course/WK18/scheduler_final/src/hooks/useApplicationData.js"],"names":["useState","useEffect","axios","useApplicationData","day","days","appointments","interviewers","state","setState","setDay","Promise","all","get","then","prev","data","bookInterview","id","interview","appointment","freeSpotChanged","saveToServer","put","res","console","log","status","updateSpots","resolve","catch","reject","cancelInterview","deleteFromServer","delete","dif","newDays","forEach","item","indexOf","spots"],"mappings":"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","sourcesContent":["import {useState, useEffect} from \"react\";\nimport axios from 'axios';\n\nexport default function useApplicationData() {\n  const [state, setState] = useState({\n    day: \"Monday\",\n    days: [],\n    appointments: {},\n    interviewers: {}\n  });\n  const setDay = day => setState({ ...state, day });\n\n  useEffect(()=>{Promise.all([\n    axios.get('/api/days'),\n    axios.get('/api/appointments'),\n    axios.get('/api/interviewers')\n    ]).then(all=>{\n      setState(prev =>({...prev, days:all[0].data, appointments: all[1].data, interviewers: all[2].data}))\n    })},[]);\n\n  function bookInterview(id, interview) {\n    const appointment = {\n      ...state.appointments[id],\n      interview: { ...interview }\n    };\n    const appointments = {\n      ...state.appointments,\n      [id]: appointment\n    };\n    const freeSpotChanged = -1;\n\n    const saveToServer = axios\n      .put(`/api/appointments/${id}`, appointment)\n      .then(res => console.log(`Received status code (adding): ${res.status}`))\n      .then (() => {\n        const days = updateSpots(id, freeSpotChanged);\n        setState({\n          ...state,\n          appointments,\n          days\n        });\n        return Promise.resolve('Saved!');\n      })\n      .catch(res => {\n        console.log(res);\n        setState({\n          ...state\n        });\n        return Promise.reject('Error Saving!');\n      })\n    return saveToServer;\n  }\n\n  function cancelInterview(id) {\n    const appointments = {...state.appointments};\n    const freeSpotChanged = 1;\n    appointments[id].interview = null;\n    const deleteFromServer = axios\n      .delete(`/api/appointments/${id}`)\n      .then(res => console.log(`Received status code (removing): ${res.status}`))\n      .then (() => {\n        const days = updateSpots(id, freeSpotChanged);\n        setState({\n          ...state,\n          appointments,\n          days\n        });\n        return Promise.resolve('Deleted!');\n      })\n      .catch(res => {\n        console.log(res);\n        return Promise.reject('Error Deleting!');\n      })\n    return deleteFromServer;\n  }\n\n  const updateSpots = (id, dif) => {\n    const newDays = [...state.days];\n    newDays.forEach(item => {\n      if (item.appointments.indexOf(id) > -1) {\n        item.spots += dif;\n      }\n    });\n    return newDays;\n  }\n\n  return {\n    state,\n    setDay,\n    bookInterview,\n    cancelInterview\n  }\n};"]},"metadata":{},"sourceType":"module"}